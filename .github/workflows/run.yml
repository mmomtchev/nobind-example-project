name: 'Test'
on: [pull_request, push]

jobs:
  release:
    runs-on: ${{ matrix.platform }}
    name: Release

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-24.04
          - macos-13
          - macos-14
          - windows-2022
          - windows-2025

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      run: npm install

    - name: Test
      run: npm test


  debug:
    runs-on: ubuntu-latest
    name: Debug

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      run: |
        npm install
        npx node-gyp configure build --debug

    - name: Test
      run: npm test


  asan:
    runs-on: ubuntu-22.04
    name: Address Sanitization

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Build
      run: |
        npm install
        npx node-gyp configure build --debug -v
      env:
        CXXFLAGS: -fsanitize=address
        LDFLAGS: -fsanitize=address
  
    - name: Get ASAN library name
      run: echo LD_PRELOAD=$(gcc -print-file-name=libasan.so) >> $GITHUB_ENV

    - name: Test
      run: npm test
      env:
        LSAN_OPTIONS: suppressions=${{ github.workspace }}/test/napi-leaks-suppression.txt


  codecov:
    runs-on: ubuntu-22.04
    name: Code Coverage

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      run: |
        npm install
        npx node-gyp configure build --debug -v
      env:
        CXXFLAGS: -fprofile-arcs -ftest-coverage
        LDFLAGS: -lgcov --coverage

    - name: Test
      run: |
        npx c8 npm test
        npm run gcov
        npm run lcov
 
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: coverage
        slug: mmomtchev/nobind-example-project


  lint:
    runs-on: ubuntu-latest
    name: Run the linters

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
    - name: Install the dependencies
      run: npm install
    - name: Run the linters
      run: npm run lint
